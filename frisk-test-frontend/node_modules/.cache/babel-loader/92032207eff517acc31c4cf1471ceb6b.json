{"ast":null,"code":"var _jsxFileName = \"/home/nootnoot/Documents/frisk-test/frisk-test-frontend/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useModal from 'react-hooks-use-modal';\nimport PinInput from 'react-code-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n\n  const [postid, setPostid] = useState(\"\");\n  const [posts, addPosts] = useState([]);\n  const [Modal, open, close] = useModal('root', {\n    preventScroll: true\n  });\n  useEffect(() => {\n    pullPosts();\n  }, []);\n\n  const pullPosts = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/all\");\n      const tableData = await res.json();\n      addPosts(tableData);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const verifyPin = async () => {\n    try {\n      const pin = document.getElementById(\"pin-input\").value;\n      const res = await fetch(\"http:localhost:5000/auth\", {\n        method: 'POST',\n        headers: \"applcation/json\",\n        content: JSON.stringify({\n          post_id: postid,\n          post_pin: pin\n        })\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const savePostID = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.post_creation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.post_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: e => console.log(this.closest('tr').attr('key')),\n              children: \"Reveal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, post.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: false,\n      width: \"800\",\n      height: \"400\",\n      effect: \"fadeInDown\",\n      onClickAway: close,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(PinInput, {\n          id: \"pin-input\",\n          type: \"tel\",\n          fields: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: verifyPin(),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: close,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"0aGKE+0xs2yTFbpiTLZy54Myoo0=\", false, function () {\n  return [useModal];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/nootnoot/Documents/frisk-test/frisk-test-frontend/src/components/Table.js"],"names":["React","useState","useEffect","useModal","PinInput","Table","postid","setPostid","posts","addPosts","Modal","open","close","preventScroll","pullPosts","res","fetch","tableData","json","error","console","log","message","verifyPin","pin","document","getElementById","value","method","headers","content","JSON","stringify","post_id","post_pin","savePostID","e","map","post","post_creation","post_name","closest","attr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useModal from 'react-hooks-use-modal'\nimport PinInput from 'react-code-input'\n\nexport default function Table() {\n\n    const [postid, setPostid] = useState(\"\")\n\n    const [posts, addPosts] = useState([])\n\n    const [Modal, open, close] = useModal('root', {\n        preventScroll: true\n    })\n\n    useEffect(() => {\n        pullPosts()\n    }, [])\n\n    const pullPosts = async () => {\n        try {\n            const res = await fetch(\"http://localhost:5000/all\")\n            const tableData = await res.json()\n            addPosts(tableData)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const verifyPin = async () => {\n        try {\n            const pin = document.getElementById(\"pin-input\").value\n            const res = await fetch(\"http:localhost:5000/auth\", {\n                method: 'POST',\n                headers: \"applcation/json\",\n                content: JSON.stringify({post_id: postid, post_pin: pin})\n            })\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const savePostID = e => {\n        \n    }\n\n    return (\n        <div className=\"table-content\">\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Name</th>\n                        <th>Message</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {posts.map(post => (\n                        <tr key={post.post_id}>\n                            <td>{post.post_creation}</td>\n                            <td>{post.post_name}</td>\n                            <td><button className=\"btn\" onClick={e => console.log(this.closest('tr').attr('key'))}>Reveal</button></td>\n                            <td><button className=\"btn\">Delete</button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <Modal visible={false} width=\"800\" height=\"400\" effect=\"fadeInDown\" onClickAway={close}>\n                <div className=\"popup-content\">\n                    <PinInput id=\"pin-input\" type=\"tel\" fields={4}></PinInput>\n                    <button onClick={verifyPin()}>Confirm</button>\n                    <button onClick={close}>Cancel</button>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}