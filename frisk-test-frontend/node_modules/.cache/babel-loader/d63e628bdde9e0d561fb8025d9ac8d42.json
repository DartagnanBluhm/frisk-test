{"ast":null,"code":"var _jsxFileName = \"/home/nootnoot/Documents/frisk-test/frisk-test-frontend/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pin, setPin] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const SubmitForm = async e => {\n    try {\n      const content = JSON.stringify({\n        name,\n        email,\n        pin,\n        message\n      });\n      const res = fetch(\"http://localhost:5000/post\", {\n        method: \"POST\",\n        headers: \"application/json\",\n        content: content\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-content\",\n      onSubmit: SubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"form-name-input\",\n        id: \"form-name-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"form-name-input\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"form-email-input\",\n        id: \"form-email-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"form-email-input\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"form-pin-input\",\n        id: \"form-pin-label\",\n        children: \"Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"form-pin-input\",\n        onChange: e => setPin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"form-message-input\",\n        id: \"form-message-label\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"form-message-input\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"X4/r7DEIJpepEMvBo7hw5epuoa4=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/nootnoot/Documents/frisk-test/frisk-test-frontend/src/components/Form.js"],"names":["React","useState","Form","name","setName","email","setEmail","pin","setPin","message","setMessage","SubmitForm","e","content","JSON","stringify","res","fetch","method","headers","console","log","error","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nexport default function Form() {\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [pin, setPin] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const SubmitForm = async e => {\n        try {\n            const content =  JSON.stringify({name, email, pin, message})\n            const res = fetch(\"http://localhost:5000/post\", {\n                method: \"POST\",\n                headers: \"application/json\",\n                content: content\n            })\n            console.log(res)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div className=\"body-content\">\n            <form className=\"form-content\" onSubmit={SubmitForm}>\n                <label for=\"form-name-input\" id=\"form-name-label\">Name</label>\n                <input type=\"text\" id=\"form-name-input\" onChange={e => setName(e.target.value)}></input>\n                <label for=\"form-email-input\" id=\"form-email-label\">Email</label>\n                <input type=\"text\" id=\"form-email-input\" onChange={e => setEmail(e.target.value)}></input>\n                <label for=\"form-pin-input\" id=\"form-pin-label\">Pin</label>\n                <input type=\"number\" id=\"form-pin-input\" onChange={e => setPin(e.target.value)}></input>\n                <label for=\"form-message-input\" id=\"form-message-label\">Message</label>\n                <input type=\"text\" id=\"form-message-input\" onChange={e => setMessage(e.target.value)}></input>\n                <input type=\"submit\" className=\"btn\"></input>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}